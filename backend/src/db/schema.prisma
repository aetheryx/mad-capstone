datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  username String @unique
  password String
  avatar   String

  Participant         Participant[]
  ConversationMessage ConversationMessage[]

  @@map("user")
}

model Conversation {
  id Int @id @default(autoincrement())

  Participant         Participant[]
  ConversationMessage ConversationMessage[]

  @@map("conversation")
}

model Participant {
  user   User @relation(fields: [userID], references: [id])
  userID Int  @map("user_id")

  conversation   Conversation @relation(fields: [conversationID], references: [id], onDelete: Cascade)
  conversationID Int          @map("conversation_id")

  @@id([userID, conversationID])
  @@index([userID])
  @@map("participant")
}

model ConversationMessage {
  id Int @id @default(autoincrement())

  author   User @relation(fields: [authorID], references: [id])
  authorID Int  @map("author_id")

  conversation   Conversation @relation(fields: [conversationID], references: [id], onDelete: Cascade)
  conversationID Int          @map("conversation_id")

  createdAt DateTime @default(now()) @map("created_at")
  content   String

  replies   ConversationMessage[] @relation(name: "message_reply")
  replyTo   ConversationMessage?  @relation(fields: [replyToId], references: [id], name: "message_reply")
  replyToId Int?                  @map("reply_to_id")

  @@index([conversationID, createdAt(sort: Desc)])
  @@map("conversation_message")
}
